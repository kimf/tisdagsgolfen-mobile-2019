# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.30.2"

default_platform :ios

def fancy_sign(message, size = 40, separator = '=-')
  puts ''.center(size, separator)
  puts " #{message} ".center(size * separator.length, separator)
  puts ''.center(size, separator)
end

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  # desc "Runs all the tests"
  # lane :test do
  #   scan
  # end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    fancy_sign "Would you like to add a Changelog?  Empty for NO"
    changelog = `read changelog; echo $changelog`.chomp
    match(type: "appstore")
    ipa = gym(scheme: "Tisdagsgolfen") # Build your app - more options available

    increment_build_number(xcodeproj: "./Tisdagsgolfen.xcodeproj")

    if changelog.empty?
      pilot(ipa: ipa)
    else
      pilot(ipa: ipa, changelog: changelog)
    end

    commit_version_bump(xcodeproj: "./Tisdagsgolfen.xcodeproj")

    add_git_tag

    push_to_git_remote
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    match(type: "appstore")
    snapshot
    gym(scheme: "Tisdagsgolfen") # Build your app - more options available
    deliver(force: true)
    frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded.
# Learn more at https://github.com/fastlane/fastlane#metrics
